#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
PS1='[\u@\h \W]\$ '

# base path to store virtualenv
# change to meet your system
VIRTUALENV_BASE_PATH=/home/jlyu/Workspace/py/venv

active_virtualenv () {
    if [[ ! -z $VIRTUALENV_PATH ]]; then
        # if we are not in the workspace or it's subdir
        if [[ "${PWD##${VIRTUALENV_PATH}}" == "$PWD" ]]; then
            unset VIRTUALENV_PATH
            deactivate
        else
            find_and_enable_virtualenv
        fi
    else
        find_and_enable_virtualenv
    fi
}

function find_and_enable_virtualenv() {
    p=`pwd`
    # check all the parent dirs(including the pwd)
    while [[ "$p" != "/" ]]; do
        env_path=$p/.env
        # only find .env file can we active the virtualenv
        if [[ -f $env_path ]]; then
            # just store the virtualenv name in the .env file
            # the env name should be in the first line and started with '#'
            env=`head -n 1 $env_path|grep -e "^#"|sed -E 's/^#//'`
            if [[ ! -z $env ]]; then
                active_path="$VIRTUALENV_BASE_PATH/$env/bin/activate"
                # the virtualenv does exist
                if [[ -f "$active_path" ]]; then
                    source "$active_path"
                    export VIRTUALENV_PATH=`pwd`
                fi
                break
            fi
        fi

        p=`dirname "$p"`
    done
}

active_virtualenv

cd () {
    builtin cd "$@"
    active_virtualenv
}
